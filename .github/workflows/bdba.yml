---
name: Vulnerability scan

permissions: read-all

on:
  workflow_call:
    inputs:
      output_prefix:
        description: 'Prefix to add to output artifacts'
        required: false
        default: ''
        type: string
      version:
        description: 'String indicating version of uploaded scan'
        required: true
        type: string
      pattern:
        description: 'Glob pattern to the artifacts that should be scanned'
        required: true
        type: string
      docker_opts:
        description: 'extra options for docker build'
        required: false
        type: string

jobs:
  scan:
    runs-on: [self-hosted, linux]
    steps:

      - name: Cleanup workspace
        run: sudo rm -rf ..?* .[!.]* *

      - name: Checkout scripts and dispositions
        uses: actions/checkout@v4
        with:
          path: source

      - name: Download artifacts to scan
        uses: actions/download-artifact@v4
        with:
          path: bdba
          pattern: ${{ inputs.pattern }}
          merge-multiple: true

      - name: Create archive to scan
        run: |
          # cp infrastructure/config/.bdba.yaml bdba/
          pushd bdba
          zip --symlinks -r ../vpl-${{ inputs.output_prefix }}.zip .
          popd

      - name: Build Docker image
        run: >
          docker build ${{ inputs.docker_opts }}
          -f "source/.github/workflows/bdba/Dockerfile.ubuntu.bdba"
          --build-arg USER_ID=$(id -u)
          --build-arg GROUP_ID=$(id -g)
          -t vpl_bdba:ubuntu
          "source/.github/workflows/bdba"

      - name: Scan package
        run: |
          cat >scan.sh <<EOL
          #!/bin/bash
          set -o errexit ; set -o nounset
          python3 source/.github/workflows/bdba/bdba.py \
          -u ${{ vars.AD_USR }} -p ${{ secrets.AD_PW }} \
          -g 32 -r results.pdf \
          -c components.csv \
          -v vulns.csv \
          -V ${{ inputs.version }} *.zip \
          > ${{ inputs.output_prefix }}results.json

          EOL
          chmod a+x scan.sh
          docker run --rm -v $(pwd):/tmp/work -w /tmp/work  \
          vpl_bdba:ubuntu ./scan.sh

      - name: Upload scan results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: ${{ inputs.output_prefix }}bdba-scan
          path: |
            *.csv
            *.json
            *.pdf

      - name: Cleanup workspace
        run: sudo rm -rf ..?* .[!.]* *
